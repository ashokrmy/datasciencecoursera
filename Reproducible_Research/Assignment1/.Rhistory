?read.csv
?str
# library for plotting data
library(ggplot2)
# to print big numbers
options(scipen=20)
# read data
data <- read.csv(file="activity.csv",
header = TRUE,
stringsAsFactors = FALSE)
# display structure of the data
str(data)
?as.Date
# transform to Date data type
data$date <- as.Date(data$date, format="%Y-%m-%d")
# display structure of the data
str(data)
# calculate the mean
mean.data <- mean(data.$steps, na.rm = TRUE)
mean.data <- mean(data$steps, na.rm = TRUE)
median.data <- median(data$steps, na.rm = TRUE)
summary(data)
median.data
mean.data
# plot histogram of steps adding mean and median
ggplot(data, aes(x=steps)) + geom_histogram()
# plot histogram of steps adding mean and median
ggplot(data, aes(x=steps)) + geom_histogram(binwidth=1)
# plot histogram of steps adding mean and median
ggplot(data, aes(x=steps)) + geom_histogram(binwidth=0.5)
# plot histogram of steps adding mean and median
ggplot(data, aes(x=steps)) + geom_histogram(binwidth=2)
ggplot(data, aes(x=steps)) + geom_histogram()
ggplot(data, aes(x=steps)) +
geom_histogram() +
geom_vline(xintercept = mean.data,show_guide = TRUE)
ggplot(data, aes(x=steps)) +
geom_histogram() +
geom_vline(xintercept = mean.data, col='red',show_guide = TRUE)
ggplot(data, aes(x=steps)) +
geom_histogram() +
geom_vline(xintercept = mean.data, col='red',show_guide = TRUE, linetype = "longdash") +
geom_vline(xintercept = median.data, col='green',show_guide = TRUE, linetype = "longdash")
ggplot(data, aes(x=steps)) +
geom_histogram(colour = "darkgreen", fill = "white", binwidth = 0.5) +
geom_vline(xintercept = mean.data, col='red',show_guide = TRUE, linetype = "longdash") +
geom_vline(xintercept = median.data, col='green',show_guide = TRUE, linetype = "longdash")
# plot histogram of steps adding mean and median
ggplot(data, aes(x=steps)) +
geom_histogram(colour = "darkgreen", fill = "white") +
geom_vline(xintercept = mean.data, col='red',show_guide = TRUE, linetype = "longdash") +
geom_vline(xintercept = median.data, col='green',show_guide = TRUE, linetype = "longdash")
# plot histogram of steps adding mean and median
ggplot(data, aes(x=steps)) +
geom_histogram(colour = "darkgreen", fill = "white") +
geom_vline(xintercept = mean.data, col='red', show_guide = TRUE, linetype = "longdash") +
geom_vline(xintercept = median.data, col='green', show_guide = TRUE, linetype = "longdash") +
annotate("text",x=c(median.data, mean.data),y=13000,label=c("Median","Mean"),hjust=0)
?annotate
?annotate
ggplot(data, aes(x=steps)) +
geom_histogram(colour = "darkgreen", fill = "white") +
geom_vline(xintercept = mean.data, col='red', show_guide = TRUE, linetype = "longdash") +
geom_vline(xintercept = median.data, col='green', show_guide = TRUE, linetype = "longdash") +
annotate("text",x = median.data,y=13000,label=c("Median"), hjust=0, col = "green") +
annotate("text",x = mean.data,y=13000,label=c("Mean"), hjust=0, col = "red")
# plot histogram of steps adding mean and median
ggplot(data, aes(x=steps)) +
geom_histogram(colour = "darkgreen", fill = "white") +
geom_vline(xintercept = mean.data, col='red', show_guide = TRUE, linetype = "longdash") +
geom_vline(xintercept = median.data, col='green', show_guide = TRUE, linetype = "longdash") +
annotate("text",x = median.data,y=13000,label=c("Median"), hjust=0, col = "green") +
annotate("text",x = mean.data,y=10000,label=c("Mean"), hjust=0, col = "red")
ggplot(data, aes(x=steps)) +
geom_histogram(colour = "darkgreen", fill = "white") +
geom_vline(xintercept = mean.data, col='red', show_guide = TRUE, linetype = "longdash") +
geom_vline(xintercept = median.data, col='green', show_guide = TRUE, linetype = "longdash") +
annotate("text",x = median.data,y=13000,label=paste(c("Median="), round(median.data,0),sep=""), hjust=0, col = "green") +
annotate("text",x = mean.data,y=13000,label=paste(c("Mean="), round(mean.data,0),sep=""), hjust=0, col = "red")
ggplot(data, aes(x=steps)) +
geom_histogram(colour = "darkgreen", fill = "white") +
geom_vline(xintercept = mean.data, col='red', show_guide = TRUE, linetype = "longdash") +
geom_vline(xintercept = median.data, col='green', show_guide = TRUE, linetype = "longdash") +
annotate("text",x = median.data,y=13000,label=paste(c("Median="), round(median.data,0),sep=""), hjust=0, col = "green") +
annotate("text",x = mean.data,y=10000,label=paste(c("Mean="), round(mean.data,0),sep=""), hjust=0, col = "red")
# plot histogram of steps adding mean and median
ggplot(data, aes(x=steps)) +
geom_histogram(colour = "darkgreen", fill = "white") +
geom_vline(xintercept = mean.data, col='red', show_guide = TRUE, linetype = "longdash") +
geom_vline(xintercept = median.data, col='green', show_guide = TRUE, linetype = "longdash") +
annotate("text",x = median.data+0.5,y=13000,label=paste(c("Median="), round(median.data,0),sep=""), hjust=0, col = "green") +
annotate("text",x = mean.data+0.5,y=10000,label=paste(c("Mean="), round(mean.data,0),sep=""), hjust=0, col = "red")
# plot histogram of steps adding mean and median
ggplot(data, aes(x=steps)) +
geom_histogram(colour = "darkgreen", fill = "white") +
geom_vline(xintercept = mean.data, col='red', show_guide = TRUE, linetype = "longdash") +
geom_vline(xintercept = median.data, col='green', show_guide = TRUE, linetype = "longdash") +
annotate("text",x = median.data+1,y=13000,label=paste(c("Median="), round(median.data,0),sep=""), hjust=0, col = "green") +
annotate("text",x = mean.data+1,y=10000,label=paste(c("Mean="), round(mean.data,0),sep=""), hjust=0, col = "red")
# summary of the data
summary(data)
summary(data)
library(ddply)
library(plyr) # transform data
agg.data <- ddply(data, .(interval), summarize, tot=mean(steps))
agg.data
agg.data <- ddply(data, .(interval), summarize, mean=mean(steps, na.rm = TRUE))
agg.data
# average the number of steps by interval for all days
agg.data <- ddply(data, .(interval), summarize, mean=mean(steps, na.rm = TRUE))
agg.data
# plot
ggplot(agg.data, aes(x=interval, y=mean)) + geom_point(type="l")
# plot
ggplot(agg.data, aes(x=interval, y=mean)) + geom_line(type="l")
which(max(agg.data$mean))
max(agg.data$mean)
?which
index(max(agg.data$mean))
arrayInd(max(agg.data$mean))
which(agg.data$mean==max(agg.data$mean))
interval.max.mean <- agg.data$interval[which(agg.data$mean==max(agg.data$mean))]
interval.max.mean
ggplot(agg.data, aes(x=interval, y=mean)) +
geom_line(type="l") +
geom_vline(xintercept = interval.max.mean, col='red', show_guide = TRUE, linetype = "longdash") +
)
ggplot(agg.data, aes(x=interval, y=mean)) +
geom_line(type="l") +
geom_vline(xintercept = interval.max.mean, col='red', show_guide = TRUE, linetype = "longdash")
ggplot(agg.data, aes(x=interval, y=mean)) +
geom_line(type="l") +
geom_vline(xintercept = interval.max.mean, col='red', show_guide = TRUE, linetype = "longdash") +
annotate("text",x = interval.max.mean+1,y=200,label=paste(c("Interval="), round(interval.max.mean,0)," ; Mean=",agg.data$mean[interval.max.mean],sep=""), hjust=0, col = "red")
agg.data$mean[interval.max.mean]
agg.data$mean[interval.max.mean]
str(agg.data)
agg.data$mean[835]
agg.data
value.max.mean <- max(agg.data$mean)
value.max.mean
# get the interval where the maximum mean value is
interval.max.mean <- agg.data$interval[which(agg.data$mean==max(agg.data$mean))]
value.max.mean <- round(max(agg.data$mean),2)
ggplot(agg.data, aes(x=interval, y=mean)) +
geom_line(type="l") +
geom_vline(xintercept = interval.max.mean, col='red', show_guide = TRUE, linetype = "longdash") +
annotate("text",x = interval.max.mean+1,y=200,label=paste(c("Interval="), round(interval.max.mean,0)," ; Mean=",value.max.mean ,sep=""), hjust=0, col = "red")
<code>echo = TRUE</code>
install.packages("PerformanceAnalytics")
```
sum(is.na(data$steps))
mean.interval
mean.interval <- ddply(data, .(interval), summarize, mean=mean(steps, na.rm = TRUE))
mean.interval
data.wo.na$steps[is.na(data.wo.na$steps)]
data.wo.na <- data
data.wo.na$steps[is.na(data.wo.na$steps)]
?ifelse
str(mean.interval)
data.wo.na$steps <- ifelse(is.na(data.wo.na$steps), mean.interval$mean[mean.interval$interval==data.wo.na$interval],data.wo.na$steps)
# check how many observations are missing
sum(is.na(data.wo.na$steps))
data.wo.na <- data
mean.interval$mean[mean.interval$interval==data.wo.na$interval]
mean.interval <- ddply(data, .(interval), summarize, mean=mean(steps, na.rm = TRUE))
data.wo.na <- data
data.wo.na$steps <- ifelse(is.na(data.wo.na$steps), mean.interval$mean[mean.interval$interval==data.wo.na$interval],data.wo.na$steps)
# check how many observations are missing
sum(is.na(data.wo.na$steps))
sum(is.na(data$steps))
mean.interval
data.wo.na <- data
ifelse(is.na(data.wo.na$steps), 1, data.wo.na$steps)
mean.interval$mean[mean.interval$interval==data.wo.na$interval]
data.wo.na$interval
str(data)
str(mean.interval)
is.na(data.wo.na$steps)
which(is.na(data.wo.na$steps))
index.na <- is.na(data.wo.na$steps)
data.wo.na <- data
# get the indexes where the NA's are
index.na <- is.na(data.wo.na$steps)
# for each NA fill the missing value with the mean for that interval
for(i in index.na){
data.wo.na$steps[i] <- mean.interval$mean[mean.interval$interval==data.wo.na$interval[i]]
}
print(i)
length(index.na)
which(is.na(data.wo.na$steps)==TRUE)
is.na(data.wo.na$steps)==TRUE
index.na <- which(is.na(data.wo.na$steps))
length(index.na)
index.na
data.wo.na$steps
data.wo.na <- data
index.na <- which(is.na(data.wo.na$steps))
length(index.na)
for(i in index.na){
print(i)
data.wo.na$steps[i] <- mean.interval$mean[mean.interval$interval==data.wo.na$interval[i]]
}
# check how many observations are missing
sum(is.na(data.wo.na$steps))
# summary of the data
summary(data.wo.na)
# mean = 37.38
# median = 0
# calculate the mean and the median
# we will use them to plot vertical lines
# in the histogram
(mean.data <- mean(data.wo.na$steps, na.rm = TRUE))
(median.data <- median(data.wo.na$steps, na.rm = TRUE))
# plot histogram of steps adding vertical lines for mean and median
ggplot(data.wo.na, aes(x=steps)) +
geom_histogram(colour = "darkgreen", fill = "white") +
geom_vline(xintercept = mean.data, col='red', show_guide = TRUE, linetype = "longdash") +
geom_vline(xintercept = median.data, col='green', show_guide = TRUE, linetype = "longdash") +
annotate("text",x = median.data+1,y=13000,label=paste(c("Median="), round(median.data,0),sep=""), hjust=0, col = "green") +
annotate("text",x = mean.data+1,y=10000,label=paste(c("Mean="), round(mean.data,0),sep=""), hjust=0, col = "red")
(mean.data <- mean(data.wo.na$steps, na.rm = TRUE))
(median.data <- median(data.wo.na$steps, na.rm = TRUE))
table(data.wo.na$interval[index.na])
table(data.wo.na$date[index.na])
?weekdays()
weekdays(data.wo.na$date)
weekdays(data.wo.na$date, abbreviate=TRUE)
Sys.setenv(LANG = "en")
weekdays(data.wo.na$date, abbreviate=TRUE)
Sys.setenv(language = "en")
weekdays(data.wo.na$date, abbreviate=TRUE)
